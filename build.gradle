buildscript {
    final netflix_grpc_plugins_version = System.properties['netflix.grpc-plugins_netflix-grpc-plugins.version']
    dependencies {
        classpath "netflix.grpc-plugins:netflix-grpc-plugin-client:${netflix_grpc_plugins_version}"
        classpath "netflix.grpc-plugins:netflix-grpc-plugin-proto-definition:${netflix_grpc_plugins_version}"
        classpath "netflix.grpc-plugins:netflix-grpc-plugin-server-guice:${netflix_grpc_plugins_version}"
    }
}

plugins {
    id 'com.github.sherter.google-java-format' version '0.9' apply false
    id 'net.ltgt.errorprone' version '2.0.1' apply false
    id 'org.cadixdev.licenser' version '0.6.1'
//    id 'name.remal.check-updates' version '1.3.1' apply false
//    id 'com.palantir.git-version' version '0.12.2' apply false
//    id 'de.marcphilipp.nexus-publish' version '0.4.0' apply falsed
}

allprojects {
    apply plugin: 'netflix.nebula'
    apply plugin: 'nebula.release'
}


//apply from: "$rootDir/gradle/versioning.gradle"
apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/licensing.gradle"
//apply from: "$rootDir/gradle/publishing.gradle"
//apply from: "$rootDir/gradle/dependencyManagement.gradle"

ext.getClientVersionName = { ->
    return project.findProperty("temporalClientVersion")
}

subprojects {
    dependencyRecommendations {
        mavenBom module: "com.netflix.spring.bom:spring-boot-netflix-internalplatform-recommendations:latest.release"
        map recommendations: [
            "io.opentracing:opentracing-mock": getRecommendedVersion("io.opentracing", "opentracing-api"),
            "io.opentracing:opentracing-util": getRecommendedVersion("io.opentracing", "opentracing-api"),
        ]
    }
}
